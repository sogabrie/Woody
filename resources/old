
sample:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	insb   (%dx),%es:(%edi)
 8048136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    $0x0,%al
 804814a:	00 00                	add    %al,(%eax)
 804814c:	10 00                	adc    %al,(%eax)
 804814e:	00 00                	add    %al,(%eax)
 8048150:	01 00                	add    %eax,(%eax)
 8048152:	00 00                	add    %al,(%eax)
 8048154:	47                   	inc    %edi
 8048155:	4e                   	dec    %esi
 8048156:	55                   	push   %ebp
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 02                	add    %al,(%edx)
 804815d:	00 00                	add    %al,(%eax)
 804815f:	00 06                	add    %al,(%esi)
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 20                	add    %ah,(%eax)
 8048165:	00 00                	add    %al,(%eax)
	...

Disassembly of section .hash:

08048168 <.hash>:
 8048168:	03 00                	add    (%eax),%eax
 804816a:	00 00                	add    %al,(%eax)
 804816c:	05 00 00 00 02       	add    $0x2000000,%eax
 8048171:	00 00                	add    %al,(%eax)
 8048173:	00 04 00             	add    %al,(%eax,%eax,1)
 8048176:	00 00                	add    %al,(%eax)
 8048178:	03 00                	add    (%eax),%eax
	...
 8048186:	00 00                	add    %al,(%eax)
 8048188:	01 00                	add    %eax,(%eax)
 804818a:	00 00                	add    %al,(%eax)
 804818c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynsym:

08048190 <.dynsym>:
	...
 80481a0:	1a 00                	sbb    (%eax),%al
	...
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	12 00                	adc    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	33 00                	xor    (%eax),%eax
	...
 80481ba:	00 00                	add    %al,(%eax)
 80481bc:	20 00                	and    %al,(%eax)
 80481be:	00 00                	add    %al,(%eax)
 80481c0:	0b 00                	or     (%eax),%eax
 80481c2:	00 00                	add    %al,(%eax)
 80481c4:	8c 84 04 08 04 00 00 	mov    %es,0x408(%esp,%eax,1)
 80481cb:	00 11                	add    %dl,(%ecx)
 80481cd:	00 0f                	add    %cl,(%edi)
 80481cf:	00 21                	add    %ah,(%ecx)
	...
 80481d9:	00 00                	add    %al,(%eax)
 80481db:	00 12                	add    %dl,(%edx)
 80481dd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynstr:

080481e0 <.dynstr>:
 80481e0:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80481e4:	63 2e                	arpl   %bp,(%esi)
 80481e6:	73 6f                	jae    8048257 <_init-0x19>
 80481e8:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 80481ed:	4f                   	dec    %edi
 80481ee:	5f                   	pop    %edi
 80481ef:	73 74                	jae    8048265 <_init-0xb>
 80481f1:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80481f8:	64 
 80481f9:	00 70 72             	add    %dh,0x72(%eax)
 80481fc:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 8048203:	6c                   	insb   (%dx),%es:(%edi)
 8048204:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804820b:	72 74                	jb     8048281 <_init+0x11>
 804820d:	5f                   	pop    %edi
 804820e:	6d                   	insl   (%dx),%es:(%edi)
 804820f:	61                   	popa   
 8048210:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 8048217:	6f                   	outsl  %ds:(%esi),(%dx)
 8048218:	6e                   	outsb  %ds:(%esi),(%dx)
 8048219:	5f                   	pop    %edi
 804821a:	73 74                	jae    8048290 <_init+0x20>
 804821c:	61                   	popa   
 804821d:	72 74                	jb     8048293 <_init+0x23>
 804821f:	5f                   	pop    %edi
 8048220:	5f                   	pop    %edi
 8048221:	00 47 4c             	add    %al,0x4c(%edi)
 8048224:	49                   	dec    %ecx
 8048225:	42                   	inc    %edx
 8048226:	43                   	inc    %ebx
 8048227:	5f                   	pop    %edi
 8048228:	32 2e                	xor    (%esi),%ch
 804822a:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0804822c <.gnu.version>:
 804822c:	00 00                	add    %al,(%eax)
 804822e:	02 00                	add    (%eax),%al
 8048230:	00 00                	add    %al,(%eax)
 8048232:	01 00                	add    %eax,(%eax)
 8048234:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

08048238 <.gnu.version_r>:
 8048238:	01 00                	add    %eax,(%eax)
 804823a:	01 00                	add    %eax,(%eax)
 804823c:	01 00                	add    %eax,(%eax)
 804823e:	00 00                	add    %al,(%eax)
 8048240:	10 00                	adc    %al,(%eax)
 8048242:	00 00                	add    %al,(%eax)
 8048244:	00 00                	add    %al,(%eax)
 8048246:	00 00                	add    %al,(%eax)
 8048248:	10 69 69             	adc    %ch,0x69(%ecx)
 804824b:	0d 00 00 02 00       	or     $0x20000,%eax
 8048250:	42                   	inc    %edx
 8048251:	00 00                	add    %al,(%eax)
 8048253:	00 00                	add    %al,(%eax)
 8048255:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048258 <.rel.dyn>:
 8048258:	58                   	pop    %eax
 8048259:	96                   	xchg   %eax,%esi
 804825a:	04 08                	add    $0x8,%al
 804825c:	06                   	push   %es
 804825d:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

08048260 <.rel.plt>:
 8048260:	68 96 04 08 07       	push   $0x7080496
 8048265:	01 00                	add    %eax,(%eax)
 8048267:	00 6c 96 04          	add    %ch,0x4(%esi,%edx,4)
 804826b:	08 07                	or     %al,(%edi)
 804826d:	04 00                	add    $0x0,%al
	...

Disassembly of section .init:

08048270 <_init>:
 8048270:	53                   	push   %ebx
 8048271:	83 ec 08             	sub    $0x8,%esp
 8048274:	e8 97 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 8048279:	81 c3 e3 13 00 00    	add    $0x13e3,%ebx
 804827f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048285:	85 c0                	test   %eax,%eax
 8048287:	74 05                	je     804828e <_init+0x1e>
 8048289:	e8 42 00 00 00       	call   80482d0 <__gmon_start__@plt>
 804828e:	83 c4 08             	add    $0x8,%esp
 8048291:	5b                   	pop    %ebx
 8048292:	c3                   	ret    

Disassembly of section .plt:

080482a0 <.plt>:
 80482a0:	ff 35 60 96 04 08    	push   0x8049660
 80482a6:	ff 25 64 96 04 08    	jmp    *0x8049664
 80482ac:	00 00                	add    %al,(%eax)
	...

080482b0 <printf@plt>:
 80482b0:	ff 25 68 96 04 08    	jmp    *0x8049668
 80482b6:	68 00 00 00 00       	push   $0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <.plt>

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 6c 96 04 08    	jmp    *0x804966c
 80482c6:	68 08 00 00 00       	push   $0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <.plt>

Disassembly of section .plt.got:

080482d0 <__gmon_start__@plt>:
 80482d0:	ff 25 58 96 04 08    	jmp    *0x8049658
 80482d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 70 84 04 08       	push   $0x8048470
 80482f0:	68 10 84 04 08       	push   $0x8048410
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 e0 83 04 08       	push   $0x80483e0
 80482fc:	e8 bf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 7b 96 04 08       	mov    $0x804967b,%eax
 8048325:	2d 78 96 04 08       	sub    $0x8049678,%eax
 804832a:	83 f8 06             	cmp    $0x6,%eax
 804832d:	76 1a                	jbe    8048349 <deregister_tm_clones+0x29>
 804832f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048334:	85 c0                	test   %eax,%eax
 8048336:	74 11                	je     8048349 <deregister_tm_clones+0x29>
 8048338:	55                   	push   %ebp
 8048339:	89 e5                	mov    %esp,%ebp
 804833b:	83 ec 14             	sub    $0x14,%esp
 804833e:	68 78 96 04 08       	push   $0x8049678
 8048343:	ff d0                	call   *%eax
 8048345:	83 c4 10             	add    $0x10,%esp
 8048348:	c9                   	leave  
 8048349:	f3 c3                	repz ret 
 804834b:	90                   	nop
 804834c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048350 <register_tm_clones>:
 8048350:	b8 78 96 04 08       	mov    $0x8049678,%eax
 8048355:	2d 78 96 04 08       	sub    $0x8049678,%eax
 804835a:	c1 f8 02             	sar    $0x2,%eax
 804835d:	89 c2                	mov    %eax,%edx
 804835f:	c1 ea 1f             	shr    $0x1f,%edx
 8048362:	01 d0                	add    %edx,%eax
 8048364:	d1 f8                	sar    %eax
 8048366:	74 1b                	je     8048383 <register_tm_clones+0x33>
 8048368:	ba 00 00 00 00       	mov    $0x0,%edx
 804836d:	85 d2                	test   %edx,%edx
 804836f:	74 12                	je     8048383 <register_tm_clones+0x33>
 8048371:	55                   	push   %ebp
 8048372:	89 e5                	mov    %esp,%ebp
 8048374:	83 ec 10             	sub    $0x10,%esp
 8048377:	50                   	push   %eax
 8048378:	68 78 96 04 08       	push   $0x8049678
 804837d:	ff d2                	call   *%edx
 804837f:	83 c4 10             	add    $0x10,%esp
 8048382:	c9                   	leave  
 8048383:	f3 c3                	repz ret 
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <__do_global_dtors_aux>:
 8048390:	80 3d 78 96 04 08 00 	cmpb   $0x0,0x8049678
 8048397:	75 13                	jne    80483ac <__do_global_dtors_aux+0x1c>
 8048399:	55                   	push   %ebp
 804839a:	89 e5                	mov    %esp,%ebp
 804839c:	83 ec 08             	sub    $0x8,%esp
 804839f:	e8 7c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483a4:	c6 05 78 96 04 08 01 	movb   $0x1,0x8049678
 80483ab:	c9                   	leave  
 80483ac:	f3 c3                	repz ret 
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <frame_dummy>:
 80483b0:	b8 6c 95 04 08       	mov    $0x804956c,%eax
 80483b5:	8b 10                	mov    (%eax),%edx
 80483b7:	85 d2                	test   %edx,%edx
 80483b9:	75 05                	jne    80483c0 <frame_dummy+0x10>
 80483bb:	eb 93                	jmp    8048350 <register_tm_clones>
 80483bd:	8d 76 00             	lea    0x0(%esi),%esi
 80483c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483c5:	85 d2                	test   %edx,%edx
 80483c7:	74 f2                	je     80483bb <frame_dummy+0xb>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 14             	sub    $0x14,%esp
 80483cf:	50                   	push   %eax
 80483d0:	ff d2                	call   *%edx
 80483d2:	83 c4 10             	add    $0x10,%esp
 80483d5:	c9                   	leave  
 80483d6:	e9 75 ff ff ff       	jmp    8048350 <register_tm_clones>
 80483db:	66 90                	xchg   %ax,%ax
 80483dd:	66 90                	xchg   %ax,%ax
 80483df:	90                   	nop

080483e0 <main>:
 80483e0:	55                   	push   %ebp
 80483e1:	89 e5                	mov    %esp,%ebp
 80483e3:	83 ec 18             	sub    $0x18,%esp
 80483e6:	8d 05 90 84 04 08    	lea    0x8048490,%eax
 80483ec:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80483f3:	89 04 24             	mov    %eax,(%esp)
 80483f6:	e8 b5 fe ff ff       	call   80482b0 <printf@plt>
 80483fb:	31 c9                	xor    %ecx,%ecx
 80483fd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048400:	89 c8                	mov    %ecx,%eax
 8048402:	83 c4 18             	add    $0x18,%esp
 8048405:	5d                   	pop    %ebp
 8048406:	c3                   	ret    
 8048407:	66 90                	xchg   %ax,%ax
 8048409:	66 90                	xchg   %ax,%ax
 804840b:	66 90                	xchg   %ax,%ax
 804840d:	66 90                	xchg   %ax,%ax
 804840f:	90                   	nop

08048410 <__libc_csu_init>:
 8048410:	55                   	push   %ebp
 8048411:	57                   	push   %edi
 8048412:	31 ff                	xor    %edi,%edi
 8048414:	56                   	push   %esi
 8048415:	53                   	push   %ebx
 8048416:	e8 f5 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804841b:	81 c3 41 12 00 00    	add    $0x1241,%ebx
 8048421:	83 ec 0c             	sub    $0xc,%esp
 8048424:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048428:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804842e:	e8 3d fe ff ff       	call   8048270 <_init>
 8048433:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048439:	29 c6                	sub    %eax,%esi
 804843b:	c1 fe 02             	sar    $0x2,%esi
 804843e:	85 f6                	test   %esi,%esi
 8048440:	74 23                	je     8048465 <__libc_csu_init+0x55>
 8048442:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048448:	83 ec 04             	sub    $0x4,%esp
 804844b:	ff 74 24 2c          	push   0x2c(%esp)
 804844f:	ff 74 24 2c          	push   0x2c(%esp)
 8048453:	55                   	push   %ebp
 8048454:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804845b:	83 c7 01             	add    $0x1,%edi
 804845e:	83 c4 10             	add    $0x10,%esp
 8048461:	39 f7                	cmp    %esi,%edi
 8048463:	75 e3                	jne    8048448 <__libc_csu_init+0x38>
 8048465:	83 c4 0c             	add    $0xc,%esp
 8048468:	5b                   	pop    %ebx
 8048469:	5e                   	pop    %esi
 804846a:	5f                   	pop    %edi
 804846b:	5d                   	pop    %ebp
 804846c:	c3                   	ret    
 804846d:	8d 76 00             	lea    0x0(%esi),%esi

08048470 <__libc_csu_fini>:
 8048470:	f3 c3                	repz ret 

Disassembly of section .fini:

08048474 <_fini>:
 8048474:	53                   	push   %ebx
 8048475:	83 ec 08             	sub    $0x8,%esp
 8048478:	e8 93 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804847d:	81 c3 df 11 00 00    	add    $0x11df,%ebx
 8048483:	83 c4 08             	add    $0x8,%esp
 8048486:	5b                   	pop    %ebx
 8048487:	c3                   	ret    

Disassembly of section .rodata:

08048488 <_fp_hw>:
 8048488:	03 00                	add    (%eax),%eax
	...

0804848c <_IO_stdin_used>:
 804848c:	01 00                	add    %eax,(%eax)
 804848e:	02 00                	add    (%eax),%al
 8048490:	48                   	dec    %eax
 8048491:	65 6c                	gs insb (%dx),%es:(%edi)
 8048493:	6c                   	insb   (%dx),%es:(%edi)
 8048494:	6f                   	outsl  %ds:(%esi),(%dx)
 8048495:	2c 20                	sub    $0x20,%al
 8048497:	57                   	push   %edi
 8048498:	6f                   	outsl  %ds:(%esi),(%dx)
 8048499:	72 6c                	jb     8048507 <__GNU_EH_FRAME_HDR+0x67>
 804849b:	64 21 0a             	and    %ecx,%fs:(%edx)
	...

Disassembly of section .eh_frame_hdr:

080484a0 <__GNU_EH_FRAME_HDR>:
 80484a0:	01 1b                	add    %ebx,(%ebx)
 80484a2:	03 3b                	add    (%ebx),%edi
 80484a4:	20 00                	and    %al,(%eax)
 80484a6:	00 00                	add    %al,(%eax)
 80484a8:	03 00                	add    (%eax),%eax
 80484aa:	00 00                	add    %al,(%eax)
 80484ac:	00 fe                	add    %bh,%dh
 80484ae:	ff                   	(bad)  
 80484af:	ff                   	(bad)  
 80484b0:	3c 00                	cmp    $0x0,%al
 80484b2:	00 00                	add    %al,(%eax)
 80484b4:	70 ff                	jo     80484b5 <__GNU_EH_FRAME_HDR+0x15>
 80484b6:	ff                   	(bad)  
 80484b7:	ff 60 00             	jmp    *0x0(%eax)
 80484ba:	00 00                	add    %al,(%eax)
 80484bc:	d0 ff                	sar    %bh
 80484be:	ff                   	(bad)  
 80484bf:	ff                   	.byte 0xff
 80484c0:	ac                   	lods   %ds:(%esi),%al
 80484c1:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080484c4 <__FRAME_END__-0x9c>:
 80484c4:	14 00                	adc    $0x0,%al
 80484c6:	00 00                	add    %al,(%eax)
 80484c8:	00 00                	add    %al,(%eax)
 80484ca:	00 00                	add    %al,(%eax)
 80484cc:	01 7a 52             	add    %edi,0x52(%edx)
 80484cf:	00 01                	add    %al,(%ecx)
 80484d1:	7c 08                	jl     80484db <__GNU_EH_FRAME_HDR+0x3b>
 80484d3:	01 1b                	add    %ebx,(%ebx)
 80484d5:	0c 04                	or     $0x4,%al
 80484d7:	04 88                	add    $0x88,%al
 80484d9:	01 00                	add    %eax,(%eax)
 80484db:	00 20                	add    %ah,(%eax)
 80484dd:	00 00                	add    %al,(%eax)
 80484df:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80484e2:	00 00                	add    %al,(%eax)
 80484e4:	bc fd ff ff 30       	mov    $0x30fffffd,%esp
 80484e9:	00 00                	add    %al,(%eax)
 80484eb:	00 00                	add    %al,(%eax)
 80484ed:	0e                   	push   %cs
 80484ee:	08 46 0e             	or     %al,0xe(%esi)
 80484f1:	0c 4a                	or     $0x4a,%al
 80484f3:	0f 0b                	ud2    
 80484f5:	74 04                	je     80484fb <__GNU_EH_FRAME_HDR+0x5b>
 80484f7:	78 00                	js     80484f9 <__GNU_EH_FRAME_HDR+0x59>
 80484f9:	3f                   	aas    
 80484fa:	1a 3b                	sbb    (%ebx),%bh
 80484fc:	2a 32                	sub    (%edx),%dh
 80484fe:	24 22                	and    $0x22,%al
 8048500:	48                   	dec    %eax
 8048501:	00 00                	add    %al,(%eax)
 8048503:	00 40 00             	add    %al,0x0(%eax)
 8048506:	00 00                	add    %al,(%eax)
 8048508:	08 ff                	or     %bh,%bh
 804850a:	ff                   	(bad)  
 804850b:	ff 5d 00             	lcall  *0x0(%ebp)
 804850e:	00 00                	add    %al,(%eax)
 8048510:	00 41 0e             	add    %al,0xe(%ecx)
 8048513:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048519:	87 03                	xchg   %eax,(%ebx)
 804851b:	43                   	inc    %ebx
 804851c:	0e                   	push   %cs
 804851d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048523:	83 05 4e 0e 20 67 0e 	addl   $0xe,0x67200e4e
 804852a:	24 44                	and    $0x44,%al
 804852c:	0e                   	push   %cs
 804852d:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048531:	41                   	inc    %ecx
 8048532:	0e                   	push   %cs
 8048533:	30 4d 0e             	xor    %cl,0xe(%ebp)
 8048536:	20 47 0e             	and    %al,0xe(%edi)
 8048539:	14 41                	adc    $0x41,%al
 804853b:	c3                   	ret    
 804853c:	0e                   	push   %cs
 804853d:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048540:	0e                   	push   %cs
 8048541:	0c 41                	or     $0x41,%al
 8048543:	c7                   	(bad)  
 8048544:	0e                   	push   %cs
 8048545:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048548:	0e                   	push   %cs
 8048549:	04 00                	add    $0x0,%al
 804854b:	00 10                	add    %dl,(%eax)
 804854d:	00 00                	add    %al,(%eax)
 804854f:	00 8c 00 00 00 1c ff 	add    %cl,-0xe40000(%eax,%eax,1)
 8048556:	ff                   	(bad)  
 8048557:	ff 02                	incl   (%edx)
 8048559:	00 00                	add    %al,(%eax)
 804855b:	00 00                	add    %al,(%eax)
 804855d:	00 00                	add    %al,(%eax)
	...

08048560 <__FRAME_END__>:
 8048560:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049564 <__frame_dummy_init_array_entry>:
 8049564:	b0 83                	mov    $0x83,%al
 8049566:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049568 <__do_global_dtors_aux_fini_array_entry>:
 8049568:	90                   	nop
 8049569:	83                   	.byte 0x83
 804956a:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

0804956c <__JCR_END__>:
 804956c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049570 <_DYNAMIC>:
 8049570:	01 00                	add    %eax,(%eax)
 8049572:	00 00                	add    %al,(%eax)
 8049574:	01 00                	add    %eax,(%eax)
 8049576:	00 00                	add    %al,(%eax)
 8049578:	0c 00                	or     $0x0,%al
 804957a:	00 00                	add    %al,(%eax)
 804957c:	70 82                	jo     8049500 <__FRAME_END__+0xfa0>
 804957e:	04 08                	add    $0x8,%al
 8049580:	0d 00 00 00 74       	or     $0x74000000,%eax
 8049585:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049588:	19 00                	sbb    %eax,(%eax)
 804958a:	00 00                	add    %al,(%eax)
 804958c:	64 95                	fs xchg %eax,%ebp
 804958e:	04 08                	add    $0x8,%al
 8049590:	1b 00                	sbb    (%eax),%eax
 8049592:	00 00                	add    %al,(%eax)
 8049594:	04 00                	add    $0x0,%al
 8049596:	00 00                	add    %al,(%eax)
 8049598:	1a 00                	sbb    (%eax),%al
 804959a:	00 00                	add    %al,(%eax)
 804959c:	68 95 04 08 1c       	push   $0x1c080495
 80495a1:	00 00                	add    %al,(%eax)
 80495a3:	00 04 00             	add    %al,(%eax,%eax,1)
 80495a6:	00 00                	add    %al,(%eax)
 80495a8:	04 00                	add    $0x0,%al
 80495aa:	00 00                	add    %al,(%eax)
 80495ac:	68 81 04 08 05       	push   $0x5080481
 80495b1:	00 00                	add    %al,(%eax)
 80495b3:	00 e0                	add    %ah,%al
 80495b5:	81 04 08 06 00 00 00 	addl   $0x6,(%eax,%ecx,1)
 80495bc:	90                   	nop
 80495bd:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 80495c4:	4c                   	dec    %esp
 80495c5:	00 00                	add    %al,(%eax)
 80495c7:	00 0b                	add    %cl,(%ebx)
 80495c9:	00 00                	add    %al,(%eax)
 80495cb:	00 10                	add    %dl,(%eax)
 80495cd:	00 00                	add    %al,(%eax)
 80495cf:	00 15 00 00 00 00    	add    %dl,0x0
 80495d5:	00 00                	add    %al,(%eax)
 80495d7:	00 03                	add    %al,(%ebx)
 80495d9:	00 00                	add    %al,(%eax)
 80495db:	00 5c 96 04          	add    %bl,0x4(%esi,%edx,4)
 80495df:	08 02                	or     %al,(%edx)
 80495e1:	00 00                	add    %al,(%eax)
 80495e3:	00 10                	add    %dl,(%eax)
 80495e5:	00 00                	add    %al,(%eax)
 80495e7:	00 14 00             	add    %dl,(%eax,%eax,1)
 80495ea:	00 00                	add    %al,(%eax)
 80495ec:	11 00                	adc    %eax,(%eax)
 80495ee:	00 00                	add    %al,(%eax)
 80495f0:	17                   	pop    %ss
 80495f1:	00 00                	add    %al,(%eax)
 80495f3:	00 60 82             	add    %ah,-0x7e(%eax)
 80495f6:	04 08                	add    $0x8,%al
 80495f8:	11 00                	adc    %eax,(%eax)
 80495fa:	00 00                	add    %al,(%eax)
 80495fc:	58                   	pop    %eax
 80495fd:	82 04 08 12          	addb   $0x12,(%eax,%ecx,1)
 8049601:	00 00                	add    %al,(%eax)
 8049603:	00 08                	add    %cl,(%eax)
 8049605:	00 00                	add    %al,(%eax)
 8049607:	00 13                	add    %dl,(%ebx)
 8049609:	00 00                	add    %al,(%eax)
 804960b:	00 08                	add    %cl,(%eax)
 804960d:	00 00                	add    %al,(%eax)
 804960f:	00 fe                	add    %bh,%dh
 8049611:	ff                   	(bad)  
 8049612:	ff 6f 38             	ljmp   *0x38(%edi)
 8049615:	82 04 08 ff          	addb   $0xff,(%eax,%ecx,1)
 8049619:	ff                   	(bad)  
 804961a:	ff 6f 01             	ljmp   *0x1(%edi)
 804961d:	00 00                	add    %al,(%eax)
 804961f:	00 f0                	add    %dh,%al
 8049621:	ff                   	(bad)  
 8049622:	ff 6f 2c             	ljmp   *0x2c(%edi)
 8049625:	82 04 08 00          	addb   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049658 <.got>:
 8049658:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804965c <_GLOBAL_OFFSET_TABLE_>:
 804965c:	70 95                	jo     80495f3 <_DYNAMIC+0x83>
 804965e:	04 08                	add    $0x8,%al
	...
 8049668:	b6 82                	mov    $0x82,%dh
 804966a:	04 08                	add    $0x8,%al
 804966c:	c6                   	.byte 0xc6
 804966d:	82                   	.byte 0x82
 804966e:	04 08                	add    $0x8,%al

Disassembly of section .data:

08049670 <__data_start>:
 8049670:	00 00                	add    %al,(%eax)
	...

08049674 <__dso_handle>:
 8049674:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

08049678 <completed.6584>:
 8049678:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 44 65 62          	sub    %al,0x62(%ebp,%eiz,2)
   9:	69 61 6e 20 35 2e 33 	imul   $0x332e3520,0x6e(%ecx),%esp
  10:	2e 31 2d 35 29 20 35 	xor    %ebp,%cs:0x35202935
  17:	2e 33 2e             	xor    %cs:(%esi),%ebp
  1a:	31 20                	xor    %esp,(%eax)
  1c:	32 30                	xor    (%eax),%dh
  1e:	31 36                	xor    %esi,(%esi)
  20:	30 31                	xor    %dh,(%ecx)
  22:	30 31                	xor    %dh,(%ecx)
  24:	00 44 65 62          	add    %al,0x62(%ebp,%eiz,2)
  28:	69 61 6e 20 63 6c 61 	imul   $0x616c6320,0x6e(%ecx),%esp
  2f:	6e                   	outsb  %ds:(%esi),(%dx)
  30:	67 20 76 65          	and    %dh,0x65(%bp)
  34:	72 73                	jb     a9 <_init-0x80481c7>
  36:	69 6f 6e 20 33 2e 36 	imul   $0x362e3320,0x6e(%edi),%ebp
  3d:	2e 32 2d 33 20 28 74 	xor    %cs:0x74282033,%ch
  44:	61                   	popa   
  45:	67 73 2f             	addr16 jae 77 <_init-0x80481f9>
  48:	52                   	push   %edx
  49:	45                   	inc    %ebp
  4a:	4c                   	dec    %esp
  4b:	45                   	inc    %ebp
  4c:	41                   	inc    %ecx
  4d:	53                   	push   %ebx
  4e:	45                   	inc    %ebp
  4f:	5f                   	pop    %edi
  50:	33 36                	xor    (%esi),%esi
  52:	32 2f                	xor    (%edi),%ch
  54:	66 69 6e 61 6c 29    	imul   $0x296c,0x61(%esi),%bp
  5a:	20 28                	and    %ch,(%eax)
  5c:	62 61 73             	bound  %esp,0x73(%ecx)
  5f:	65 64 20 6f 6e       	gs and %ch,%fs:0x6e(%edi)
  64:	20 4c 4c 56          	and    %cl,0x56(%esp,%ecx,2)
  68:	4d                   	dec    %ebp
  69:	20 33                	and    %dh,(%ebx)
  6b:	2e 36 2e 32 29       	cs ss xor %cs:(%ecx),%ch
	...
